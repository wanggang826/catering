<?php
namespace app\admin\controller;


use think\Exception;

class DiscountsSet extends AdminBase
{
    private $discounts_set,$config;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->discounts_set = model('DiscountsSet');
        $this->config = model('config');
    }

    public function edit()
    {
        if(request()->isPost()){
            $data = input();
            try{
                if(empty($data['discount_enable']))
                    throw new Exception('选择是否允许优惠买单');
                if(!is_numeric((int)$data['delivery_fee']))
                    throw new Exception('外卖配送费必须为数字');
                if(!is_numeric((int)$data['pack_fee']))
                    throw new Exception('外卖包装费必须为数字');
                if(!is_numeric((int)$data['new_off']))
                    throw new Exception('首单优惠必须为数字');
                if(empty($data['id'][0]) || empty($data['over_money'][0]) || empty($data['discount_money'][0]))
                        throw new Exception('请至少完善一条优惠买单信息');
                if(empty($data['id'][1]) || empty($data['over_money'][1]) || empty($data['discount_money'][1]))
                    throw new Exception('请至少完善一条满减优惠信息');
                //优惠买单
                $data_add1 = array();
                foreach ($data['id'][0] as $key => $value){
                    if(!is_numeric($data['over_money'][0][$key]) || !is_numeric($data['discount_money'][0][$key]))
                        throw new Exception('请输入数字作为金额');
                    $data_add1[] = [
                        'over_money'     => $data['over_money'][0][$key],
                        'discount_money' => $data['discount_money'][0][$key],
                        'type'           => 0
                    ];
                }
                //满减优惠
                $data_add2 = array();
                foreach ($data['id'][1] as $key => $value){
                    if(!is_numeric($data['over_money'][1][$key]) || !is_numeric($data['discount_money'][1][$key]))
                        throw new Exception('请输入数字作为金额');
                    $data_add2[] = [
                        'over_money'     => $data['over_money'][1][$key],
                        'discount_money' => $data['discount_money'][1][$key],
                        'type'           => 1
                    ];
                }
                //修改优惠数据
                $this->discounts_set->where('create_time','<',time())->delete();
                $add_data = array_merge($data_add1,$data_add2);
                $res = $this->discounts_set->saveAll($add_data);
                if(empty($res))
                    throw new Exception('操作失败');
                //评论配置
                $data_comment = array(
                    'good_comment'      => $data['good_comment'],
                    'mid_comment'       => $data['mid_comment'],
                    'bad_comment'       => $data['bad_comment']
                );
                //修改基础数据
                $comment_data = serialize($data_comment);
                $add_base = [
                    ['id'=> 94,'config_value'=>$data['discount_enable']],
                    ['id'=> 95,'config_value'=>$data['delivery_fee']],
                    ['id'=> 96,'config_value'=>$data['pack_fee']],
                    ['id'=> 97,'config_value'=>$data['new_off']],
                    ['id'=> 98,'config_value'=>$comment_data],
                ];
                $this->config->saveAll($add_base);

                Api()->setApi('url',input('location'))->ApiSuccess();

            }catch (\Exception $e){
                Api()->setApi('msg',$e->getMessage())->setApi('url',0)->ApiError();
            }


        }

        //优惠
        $discount_type1 = $this->discounts_set->where('type',0)->select();
        //满减
        $discount_type2 = $this->discounts_set->where('type',1)->select();
        //基础配置
        $base_config = $this->config->where('group','common')->order('id')->column('config_value');
        //评论等级
        $comment_star = unserialize($base_config[4]);
        return view([
            'discount_type1'    => $discount_type1,
            'discount_type2'    => $discount_type2,
            'base_config'       => $base_config,
            'comment_star'      => $comment_star
        ]);

    }

}