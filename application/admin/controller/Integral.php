<?php
namespace app\admin\controller;

use app\admin\model\Users;
use think\Exception;


class Integral extends AdminBase
{
    private $lotto_set,$coupon;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->lotto_set  = model('LottoSet');
        $this->coupon = model('Coupon');
    }

	//抽奖设置
    public function lotto_set_bk()
    {
        $time = time();
        if(request()->isAjax()){
            try{
                $data = input();
                if(empty($data['integral_need']))
                    throw new Exception('抽奖消耗积分不能为空');
                if(empty($data['coupon_id']))
                    throw new Exception('请选择优惠券');
                if(empty($data['id']))
                    throw new Exception('参数错误');
                if(empty($data['odds']))
                    throw new Exception('请填写正确中奖几率');
                if(array_sum($data['odds']) > 100)
                    throw new Exception('中奖概率大于100%，请重新调整');
                //更新抽奖基础配置
                $ids = $this->lotto_set->column('id');
                //删除
                $del_ids = array_diff($ids,$data['id']);
                $this->lotto_set->where('id','in',$del_ids)->update(['delete_time'=>$time]);
                //添加
                $add_ids = array_diff($data['id'],$ids);
                if(!empty($add_ids)){
                    $add_data = array();
                    foreach ($add_ids as $key => $value){
                        if(!empty($data['coupon_id'][$key]) && !empty($data['odds'][$key]) ){
                            if(!is_numeric($data['odds'][$key]))
                                throw new Exception('请输入数字作为中奖几率');
                            $add_data[] = ['coupon_id'=>$data['coupon_id'][$key],'odds'=>$data['odds'][$key]];
                        }
                    }
                    $this->lotto_set->saveAll($add_data);
                }
                //修改
                $edit_ids = array_intersect($data['id'],$ids);
                if(!empty($add_ids)){
                    $edit_data = array();
                    foreach ($edit_ids as $key => $value){
                        if(!empty($data['coupon_id'][$key]) && !empty($data['odds'][$key]) ){
                            if(!is_numeric($data['odds'][$key]))
                                throw new Exception('请输入数字作为中奖几率');
                            $edit_data[] = ['id'=>$value,'coupon_id'=>$data['coupon_id'][$key],'odds'=>$data['odds'][$key]];
                        }
                    }
                    $this->lotto_set->saveAll($edit_data);
                }
                model('config')->where('config_mark','INTEGRAL_NEED')->update(['config_value'=>$data['integral_need']]);
//                model('config')->where('config_mark','VALID_TIME')->update(['config_value'=>$data['valid_time']]);
                Api()->setApi('url',input('location'))->ApiSuccess();
            }catch (\Exception $e){
                Api()->setApi('msg',$e->getMessage())->setApi('url',0)->ApiError();
            }
        }
        //抽奖基础配置
        $config = model('config')->where('group','lotto')->order('id')->column('config_value');
        //有效优惠券
        $model = new \app\admin\model\Coupon();
        $coupons = $model->alias('C')->where('C.valid_start','<',$time)
            ->where('C.valid_end','>',$time)
            ->where('C.count > C.out_count')
            ->field('C.id,C.money')->select();
        //设置
//        $sets = $this->lotto_set->order('id')->select();
        $sets = $this->lotto_set->alias('LS')
            ->field('C.money,LS.*')
            ->join('cy_coupon C','LS.coupon_id = C.id')
            ->select();
        return view(['data'=>$sets,'config'=>$config,'coupons'=>$coupons]);
    }

    public function lotto_set()
    {
        if(request()->isAjax()){
            try{
                $data = input();
                $time = time();
                if(empty($data['integral_need']))
                    throw new Exception('抽奖消耗积分不能为空');
                if(empty($data['money']))
                    throw new Exception('请最少输入一个优惠券金额');
                if(empty($data['id']))
                    throw new Exception('参数错误');
                if(empty($data['odds']))
                    throw new Exception('请填写正确中奖几率');
                if(array_sum($data['odds']) > 100)
                    throw new Exception('中奖概率大于100%，请重新调整');
                //更新抽奖基础配置
                $ids = $this->coupon->column('id');
                //删除
                $del_ids = array_diff($ids,$data['id']);
                $this->coupon->where('id','in',$del_ids)->update(['delete_time'=>$time]);
                //添加
                $add_ids = array_diff($data['id'],$ids);
                if(!empty($add_ids)){
                    $add_data = array();
                    foreach ($add_ids as $key => $value){
                        if(!empty($data['money'][$key]) && !empty($data['odds'][$key]) ){
                            if(!is_numeric($data['odds'][$key]))
                                throw new Exception('请输入数字作为中奖几率');
                            if(!is_numeric($data['money'][$key]))
                                throw new Exception('请输入数字优惠券金额');
                            $add_data[] = ['money'=>$data['money'][$key],'odds'=>$data['odds'][$key]];
                        }
                    }
                    $this->coupon->saveAll($add_data);
                }
                //修改
                $edit_ids = array_intersect($data['id'],$ids);
                if(!empty($edit_ids)){
                    $edit_data = array();
                    foreach ($edit_ids as $key => $value){
                        if(!empty($data['money'][$key]) && !empty($data['odds'][$key]) ){
                            if(!is_numeric($data['odds'][$key]))
                                throw new Exception('请输入数字作为中奖几率');
                            if(!is_numeric($data['money'][$key]))
                                throw new Exception('请输入数字作为优惠券金额');
                            $edit_data[] = ['id'=>$value,'money'=>$data['money'][$key],'odds'=>$data['odds'][$key]];
                        }
                    }
                    $this->coupon->saveAll($edit_data);
                }
                //抽奖所需积分
                model('config')->where('config_mark','INTEGRAL_NEED')->update(['config_value'=>$data['integral_need']]);
                //有效时间
                model('config')->where('config_mark','VALID_TIME')->update(['config_value'=>$data['valid_time']]);
                Api()->setApi('url',input('location'))->ApiSuccess();
            }catch (\Exception $e){
                Api()->setApi('msg',$e->getMessage())->setApi('url',0)->ApiError();
            }



        }

        //抽奖基础配置
        $config = model('config')->where('group','lotto')->order('id')->column('config_value');
        //抽獎优惠券
        $coupons = $this->coupon->where('odds','>',0)->select();
        //奖券最大id
        $max_coupon_id = $this->coupon->max('id');
        $next_coupon_id = $max_coupon_id + 1;

        return view(['data'=>$coupons,'config'=>$config,'next_coupon_id'=> $next_coupon_id]);

    }

}